apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

static def getVersionName() {
    return String.format(Locale.getDefault(), "2.0.%d", (int) (System.currentTimeMillis() / 1000 / 60 / 60))
}

def getVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--all', '--count'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())+1500
    }
    catch (ignored) {
        return -1;
    }
}

def name = "MONKOVEL"

def keystorePSW = ''
def keystoreAlias = ''
def keystoreAliasPSW = ''
// default keystore file, PLZ config file path in local.properties
def keyFile = file('1.jks')

Properties properties = new Properties()
// local.properties file in the root director
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def keystoreFilepath = properties.getProperty("keystore.path")

if (keystoreFilepath) {
    keystorePSW = properties.getProperty("keystore.password")
    keystoreAlias = properties.getProperty("keystore.alias")
    keystoreAliasPSW = properties.getProperty("keystore.alias_password")
    keyFile = file(keystoreFilepath)
}



android {
    compileSdkVersion compile_sdk_version

    def currentVersionCode = getVersionCode()
    def currentVersionName = getVersionName()

    signingConfigs {
        myConfig {
            storeFile keyFile
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }
    }

    defaultConfig {
        applicationId "com.gedoor.monkeybook.super"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode currentVersionCode
        versionName currentVersionName
        project.ext.set("archivesBaseName", name + "_" + version)
        multiDexEnabled true

    }

    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            signingConfig signingConfigs.myConfig
            buildConfigField "boolean", "IS_RELEASE", "true"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.myConfig
            applicationIdSuffix '.debug'
            versionNameSuffix ' debug'
            buildConfigField "boolean", "IS_RELEASE", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "${name}_${defaultConfig.versionName}.apk"
            }
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "$support_library_version"
            }
        }
    }
}

dependencies {
    api project(':basemvplib')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'

    //fireBase
    implementation 'com.google.firebase:firebase-core:16.0.4'
    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }

    //support
    implementation "com.android.support:appcompat-v7:$support_library_version"
    implementation "com.android.support:design:$support_library_version"
    implementation "com.android.support:cardview-v7:$support_library_version"
    implementation "com.android.support:support-compat:$support_library_version"
    implementation 'com.google.code.gson:gson:2.8.2'

    //GreenDao
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'com.github.yuweiguocn:GreenDaoUpgradeHelper:v2.1.0'

    //codecMD5
    implementation 'commons-codec:commons-codec:1.11'

    //ProgressBar
    implementation 'com.zhangmonke:MProgressBar:1.0.1'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    implementation 'jp.wasabeef:glide-transformations:3.2.0'
    // If you want to use the GPU Filters
    implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'

    //AutoFitTextView
    implementation 'me.grantland:autofittextview:0.2.1'

    //删除粒子效果
    implementation 'tyrantgit:explosionfield:1.0.1'

    //View简易动画
    implementation 'com.daimajia.easing:library:2.1@aar'
    implementation 'com.daimajia.androidanimations:library:2.3@aar'

    //CircleImageView
    implementation 'de.hdodenhof:circleimageview:2.2.0'

    //SwitchButton
    implementation 'com.kyleduo.switchbutton:library:2.0.0'

    //bind view
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //动画
    implementation 'com.victor:lib:1.0.4'

    //简易权限获取
    implementation 'pub.devrel:easypermissions:1.3.0'

    //二维码
    implementation 'com.journeyapps:zxing-android-embedded:3.5.0'

    //颜色选择
    implementation 'com.github.QuadFlask:colorpicker:0.0.13'

    //文件目录选择
    implementation('com.github.gedoor.AndroidPicker:FilePicker:1.6.3') {
        exclude group: 'com.android.support'
    }

    //简繁转换
    implementation 'com.luhuiguo:chinese-utils:1.0'

    //字符串比较
    implementation 'net.ricecode:string-similarity:1.0.0'

    implementation 'ru.noties:markwon:2.0.0'

}

greendao {
    schemaVersion 43
    daoPackage 'com.monke.monkeybook.dao'
    targetGenDir 'src/main/java'
}

